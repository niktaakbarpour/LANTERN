{
    "oai_response": {
        "choices": [
            {
                "message": {
                    "role": "assistant",
                    "content": "```C#\n\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Text;\n\nnamespace CF\n{\n\tinternal class Program\n\t{\n\t\tprivate static void Main(string[] args)\n\t\t{\n\t\t\tvar sr = new InputReader(Console.In);\n\t\t\t//var sr = new InputReader(new StreamReader(\"input.txt\"));\n\t\t\tvar task = new Task();\n\t\t\tusing (var sw = Console.Out)\n\t\t\t{\n\t\t\t\t//using (var sw = new StreamWriter(\"output.txt\")) {\n\t\t\t\ttask.Solve(sr, sw);\n\t\t\t\t//Console.ReadKey();\n\t\t\t}\n\t\t}\n\t}\n\n\tinternal class Task\n\t{\n\t\tpublic void Solve(InputReader sr, TextWriter sw)\n\t\t{\n\t\t\tvar n = sr.NextInt32();\n\t\t\tvar x = sr.NextInt32();\n\t\t\tif (n % 2 == 1)\n\t\t\t\tx = (x + 1) % 3;\n\t\t\tsw.WriteLine(x);\n\t\t}\n\t}\n}\n\ninternal class InputReader : IDisposable\n{\n\tprivate bool isDispose;\n\tprivate readonly TextReader sr;\n\n\tpublic InputReader(TextReader stream)\n\t{\n\t\tsr = stream;\\\n\\\n\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003```"
                }
            }
        ],
        "prompt": [
            "Fix a buggy program written in C# language to solve the following programming problem:\nDescription: Bomboslav likes to look out of the window in his room and watch lads outside playing famous shell game. The game is played by two persons: operator and player. Operator takes three similar opaque shells and places a ball beneath one of them. Then he shuffles the shells by swapping some pairs and the player has to guess the current position of the ball.Bomboslav noticed that guys are not very inventive, so the operator always swaps the left shell with the middle one during odd moves (first, third, fifth, etc.) and always swaps the middle shell with the right one during even moves (second, fourth, etc.).Let's number shells from 0 to 2 from left to right. Thus the left shell is assigned number 0, the middle shell is 1 and the right shell is 2. Bomboslav has missed the moment when the ball was placed beneath the shell, but he knows that exactly n movements were made by the operator and the ball was under shell x at the end. Now he wonders, what was the initial position of the ball?\nInput Specification: The first line of the input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7109)\u00a0\u2014 the number of movements made by the operator. The second line contains a single integer x (0\u2009\u2264\u2009x\u2009\u2264\u20092)\u00a0\u2014 the index of the shell where the ball was found after n movements.\nOutput Specification: Print one integer from 0 to 2\u00a0\u2014 the index of the shell where the ball was initially placed.\n\nSample Input:\n4\n2\nSample Output:\n1\n\nSample Input:\n1\n1\nSample Output:\n0\n\nNotes: NoteIn the first sample, the ball was initially placed beneath the middle shell and the operator completed four movements.  During the first move operator swapped the left shell and the middle shell. The ball is now under the left shell.  During the second move operator swapped the middle shell and the right one. The ball is still under the left shell.  During the third move operator swapped the left shell and the middle shell again. The ball is again in the middle.  Finally, the operators swapped the middle shell and the right shell. The ball is now beneath the right shell. \nTake input from standard input and output to standard output\n\nHere is the code with a bug of RUNTIME_ERROR:\n\n\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Text;\n\nnamespace CF\n{\n\tinternal class Program\n\t{\n\t\tprivate static void Main(string[] args)\n\t\t{\n\t\t\tvar sr = new InputReader(Console.In);\n\t\t\t//var sr = new InputReader(new StreamReader(\"input.txt\"));\n\t\t\tvar task = new Task();\n\t\t\tusing (var sw = Console.Out)\n\t\t\t{\n\t\t\t\t//using (var sw = new StreamWriter(\"output.txt\")) {\n\t\t\t\ttask.Solve(sr, sw);\n\t\t\t\t//Console.ReadKey();\n\t\t\t}\n\t\t}\n\t}\n\n\tinternal class Task\n\t{\n\t\tpublic void Solve(InputReader sr, TextWriter sw)\n\t\t{\n\t\t\tvar n = sr.NextInt32();\n\t\t\tvar x = sr.NextInt32();\n\t\t\tn = n % 6;\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar curr = i;\n\t\t\t\tfor (var j = 1; j <= n; j++) {\n\t\t\t\t\tif (j % 2 == 1) {\n\t\t\t\t\t\tif (curr == 0)\n\t\t\t\t\t\t\tcurr = 1;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (curr == 1) {\n\t\t\t\t\t\t\t\tcurr = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j % 2 == 0) {\n\t\t\t\t\t\tif (curr == 1)\n\t\t\t\t\t\t\tcurr = 2;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (curr == 2) {\n\t\t\t\t\t\t\t\tcurr = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (curr == x) {\n\t\t\t\t\tsw.WriteLine(i);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new InvalidOperationException();\n\t\t}\n\t}\n}\n\ninternal class InputReader : IDisposable\n{\n\tprivate bool isDispose;\n\tprivate readonly TextReader sr;\n\n\tpublic InputReader(TextReader stream)\n\t{\n\t\tsr = stream;\n\t}\n\n\tpublic void Dispose()\n\t{\n\t\tDispose(true);\n\t\tGC.SuppressFinalize(this);\n\t}\n\n\tpublic string NextString()\n\t{\n\t\tvar result = sr.ReadLine();\n\t\treturn result;\n\t}\n\n\tpublic int NextInt32()\n\t{\n\t\treturn Int32.Parse(NextString());\n\t}\n\n\tpublic long NextInt64()\n\t{\n\t\treturn Int64.Parse(NextString());\n\t}\n\n\tpublic string[] NextSplitStrings()\n\t{\n\t\treturn NextString()\n\t\t\t\t\t\t.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\t}\n\n\tpublic T[] ReadArray<T>(Func<string, CultureInfo, T> func)\n\t{\n\t\treturn NextSplitStrings()\n\t\t\t\t\t\t.Select(s => func(s, CultureInfo.InvariantCulture))\n\t\t\t\t\t\t.ToArray();\n\t}\n\n\tpublic T[] ReadArrayFromString<T>(Func<string, CultureInfo, T> func, string str)\n\t{\n\t\treturn\n\t\t\t\t\t\tstr.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries)\n\t\t\t\t\t\t\t\t\t\t.Select(s => func(s, CultureInfo.InvariantCulture))\n\t\t\t\t\t\t\t\t\t\t.ToArray();\n\t}\n\n\tprotected void Dispose(bool dispose)\n\t{\n\t\tif (!isDispose)\n\t\t{\n\t\t\tif (dispose)\n\t\t\t\tsr.Close();\n\t\t\tisDispose = true;\n\t\t}\n\t}\n\n\t~InputReader()\n\t{\n\t\tDispose(false);\n\t}\n}\n\nProvide the fixed C# code without any description or extra tokens.\n\nFixed source code:",
            ""
        ]
    },
    "source_data": {
        "delete_cnt": 0,
        "fix_code_uid": "",
        "difficulty": 1000,
        "replace_cnt": 1,
        "fix_ops_cnt": 1,
        "prob_desc_output_spec": "Print one integer from 0 to 2\u00a0\u2014 the index of the shell where the ball was initially placed.",
        "apr_id": "9509c3faf7419e9b1684434353b0e042",
        "bug_source_code": "\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Text;\n\nnamespace CF\n{\n\tinternal class Program\n\t{\n\t\tprivate static void Main(string[] args)\n\t\t{\n\t\t\tvar sr = new InputReader(Console.In);\n\t\t\t//var sr = new InputReader(new StreamReader(\"input.txt\"));\n\t\t\tvar task = new Task();\n\t\t\tusing (var sw = Console.Out)\n\t\t\t{\n\t\t\t\t//using (var sw = new StreamWriter(\"output.txt\")) {\n\t\t\t\ttask.Solve(sr, sw);\n\t\t\t\t//Console.ReadKey();\n\t\t\t}\n\t\t}\n\t}\n\n\tinternal class Task\n\t{\n\t\tpublic void Solve(InputReader sr, TextWriter sw)\n\t\t{\n\t\t\tvar n = sr.NextInt32();\n\t\t\tvar x = sr.NextInt32();\n\t\t\tn = n % 6;\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar curr = i;\n\t\t\t\tfor (var j = 1; j <= n; j++) {\n\t\t\t\t\tif (j % 2 == 1) {\n\t\t\t\t\t\tif (curr == 0)\n\t\t\t\t\t\t\tcurr = 1;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (curr == 1) {\n\t\t\t\t\t\t\t\tcurr = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j % 2 == 0) {\n\t\t\t\t\t\tif (curr == 1)\n\t\t\t\t\t\t\tcurr = 2;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (curr == 2) {\n\t\t\t\t\t\t\t\tcurr = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (curr == x) {\n\t\t\t\t\tsw.WriteLine(i);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new InvalidOperationException();\n\t\t}\n\t}\n}\n\ninternal class InputReader : IDisposable\n{\n\tprivate bool isDispose;\n\tprivate readonly TextReader sr;\n\n\tpublic InputReader(TextReader stream)\n\t{\n\t\tsr = stream;\n\t}\n\n\tpublic void Dispose()\n\t{\n\t\tDispose(true);\n\t\tGC.SuppressFinalize(this);\n\t}\n\n\tpublic string NextString()\n\t{\n\t\tvar result = sr.ReadLine();\n\t\treturn result;\n\t}\n\n\tpublic int NextInt32()\n\t{\n\t\treturn Int32.Parse(NextString());\n\t}\n\n\tpublic long NextInt64()\n\t{\n\t\treturn Int64.Parse(NextString());\n\t}\n\n\tpublic string[] NextSplitStrings()\n\t{\n\t\treturn NextString()\n\t\t\t\t\t\t.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\t}\n\n\tpublic T[] ReadArray<T>(Func<string, CultureInfo, T> func)\n\t{\n\t\treturn NextSplitStrings()\n\t\t\t\t\t\t.Select(s => func(s, CultureInfo.InvariantCulture))\n\t\t\t\t\t\t.ToArray();\n\t}\n\n\tpublic T[] ReadArrayFromString<T>(Func<string, CultureInfo, T> func, string str)\n\t{\n\t\treturn\n\t\t\t\t\t\tstr.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries)\n\t\t\t\t\t\t\t\t\t\t.Select(s => func(s, CultureInfo.InvariantCulture))\n\t\t\t\t\t\t\t\t\t\t.ToArray();\n\t}\n\n\tprotected void Dispose(bool dispose)\n\t{\n\t\tif (!isDispose)\n\t\t{\n\t\t\tif (dispose)\n\t\t\t\tsr.Close();\n\t\t\tisDispose = true;\n\t\t}\n\t}\n\n\t~InputReader()\n\t{\n\t\tDispose(false);\n\t}\n}",
        "prob_desc_input_spec": "The first line of the input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7109)\u00a0\u2014 the number of movements made by the operator. The second line contains a single integer x (0\u2009\u2264\u2009x\u2009\u2264\u20092)\u00a0\u2014 the index of the shell where the ball was found after n movements.",
        "src_uid": "7853e03d520cd71571a6079cdfc4c4b0",
        "bug_code_uid": "c1c31e0aa3827140621a44d00958023e",
        "equal_cnt": 2,
        "prob_desc_time_limit": "0.5 seconds",
        "similarity_score": 0.9995693564414978,
        "bug_exec_outcome": "RUNTIME_ERROR",
        "lang_cluster": "C#",
        "potential_dominant_fix_op": "replace",
        "prob_desc_sample_inputs": [
            "4\n2",
            "1\n1"
        ],
        "prob_desc_input_from": "standard input",
        "prob_desc_description": "Bomboslav likes to look out of the window in his room and watch lads outside playing famous shell game. The game is played by two persons: operator and player. Operator takes three similar opaque shells and places a ball beneath one of them. Then he shuffles the shells by swapping some pairs and the player has to guess the current position of the ball.Bomboslav noticed that guys are not very inventive, so the operator always swaps the left shell with the middle one during odd moves (first, third, fifth, etc.) and always swaps the middle shell with the right one during even moves (second, fourth, etc.).Let's number shells from 0 to 2 from left to right. Thus the left shell is assigned number 0, the middle shell is 1 and the right shell is 2. Bomboslav has missed the moment when the ball was placed beneath the shell, but he knows that exactly n movements were made by the operator and the ball was under shell x at the end. Now he wonders, what was the initial position of the ball?",
        "lang": "MS C#",
        "fix_exec_outcome": "",
        "insert_cnt": 0,
        "fix_source_code": "",
        "prob_desc_notes": "NoteIn the first sample, the ball was initially placed beneath the middle shell and the operator completed four movements.  During the first move operator swapped the left shell and the middle shell. The ball is now under the left shell.  During the second move operator swapped the middle shell and the right one. The ball is still under the left shell.  During the third move operator swapped the left shell and the middle shell again. The ball is again in the middle.  Finally, the operators swapped the middle shell and the right shell. The ball is now beneath the right shell. ",
        "file_name": "C#.jsonl",
        "tags": [
            "math",
            "constructive algorithms",
            "implementation"
        ],
        "prob_desc_output_to": "standard output",
        "prob_desc_created_at": "1487930700",
        "prob_desc_memory_limit": "256 megabytes",
        "prob_desc_sample_outputs": [
            "1",
            "0"
        ],
        "hidden_unit_tests": "[{\"input\": \"4\\r\\n2\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"1\\r\\n1\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"2\\r\\n2\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"3\\r\\n1\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"3\\r\\n2\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"3\\r\\n0\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"2000000000\\r\\n0\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"2\\r\\n0\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"2\\r\\n1\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"4\\r\\n0\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"4\\r\\n1\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"5\\r\\n0\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"5\\r\\n1\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"5\\r\\n2\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"6\\r\\n0\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"6\\r\\n1\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"6\\r\\n2\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"7\\r\\n0\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"7\\r\\n1\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"7\\r\\n2\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"100000\\r\\n0\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"100000\\r\\n1\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"100000\\r\\n2\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"99999\\r\\n1\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"99998\\r\\n1\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"99997\\r\\n1\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"99996\\r\\n1\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"99995\\r\\n1\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"1999999995\\r\\n0\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"1999999995\\r\\n1\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"1999999995\\r\\n2\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"1999999996\\r\\n0\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"1999999996\\r\\n1\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"1999999996\\r\\n2\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"1999999997\\r\\n0\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"1999999997\\r\\n1\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"1999999997\\r\\n2\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"1999999998\\r\\n0\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"1999999998\\r\\n1\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"1999999998\\r\\n2\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"1999999999\\r\\n0\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"1999999999\\r\\n1\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"1999999999\\r\\n2\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"2000000000\\r\\n1\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"2000000000\\r\\n2\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"1234567890\\r\\n0\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"1234567890\\r\\n1\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"1234567890\\r\\n2\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"123456789\\r\\n0\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"123456789\\r\\n1\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"123456789\\r\\n2\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"123456790\\r\\n0\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"12\\r\\n2\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"32\\r\\n1\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"20\\r\\n2\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"10\\r\\n1\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"1\\r\\n0\\r\\n\", \"output\": [\"1\"]}, {\"input\": \"76994383\\r\\n1\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"25\\r\\n2\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"1\\r\\n2\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"12\\r\\n0\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"150\\r\\n2\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"15\\r\\n0\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"21\\r\\n2\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"18\\r\\n2\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"8\\r\\n2\\r\\n\", \"output\": [\"0\"]}, {\"input\": \"10\\r\\n0\\r\\n\", \"output\": [\"2\"]}, {\"input\": \"16\\r\\n0\\r\\n\", \"output\": [\"2\"]}]"
    }
}